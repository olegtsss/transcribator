version: '3'
services:

  transcribator_whisper:
    container_name: transcribator_whisper
    image: fedirz/faster-whisper-server:latest-cpu
    restart: always
    networks:
      app_net_3:
        ipv4_address: 10.0.2.2
    # ports:
    #   - "192.168.16.65:8000:8000"
    volumes:
      - cache_transcribator:/root/.cache/huggingface
    healthcheck:
      test: curl -f http://10.0.2.2:8000/health || exit 1
      interval: 180s
      timeout: 3s
      retries: 3
      start_period: 30s

  transcribator_nginx:
    container_name: transcribator_nginx
    image: nginx:1.21.3-alpine
    depends_on:
      - transcribator_producer
    restart: always
    env_file:
      - ../.env
    networks:
      app_net_3:
        ipv4_address: 10.0.2.3
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    healthcheck:
      test: service nginx status || exit 1
      interval: 190s
      timeout: 3s
      retries: 3
      start_period: 30s

  transcribator_bot:
    container_name: transcribator_bot
    build:
      context: ../bot/
      dockerfile: Dockerfile_bot
    depends_on:
      - transcribator_nginx
    restart: always
    env_file:
      - ../.env
    networks:
      app_net_3:
        ipv4_address: 10.0.2.4
    volumes:
      - logs_transcribator:/app/logs
      - temp_transcribator:/app/temp

  transcribator_rabbit:
    image: rabbitmq:3.12-management
    container_name: transcribator_rabbit
    depends_on:
      - transcribator_whisper
    # ports:
    #   - 192.168.16.65:5672:5672
      # - 192.168.16.65:15672:15672  web интерфейс
    env_file: ../.env
    networks:
      app_net_3:
        ipv4_address: 10.0.2.5
    volumes:
      - rb_volume_transcribator:/var/lib/rabbitmq/mnesia
    restart: always
    healthcheck:
      test: ["CMD", "rabbitmqctl", "ping"]
      interval: 200s
      timeout: 10s
      retries: 3
  
  transcribator_producer:
    container_name: transcribator_producer
    build:
      context: ../producer/
      dockerfile: Dockerfile_producer
    restart: always
    depends_on:
      - transcribator_rabbit
    # ports:
    #   - 192.168.16.65:8001:8001  для тестов
    env_file:
      - ../.env
    volumes:
      - logs_transcribator:/app/logs
    networks:
      app_net_3:
        ipv4_address: 10.0.2.6
    healthcheck:
      test: curl -f http://10.0.2.6:8001/api/v1/healthcheck/200 || exit 1
      interval: 210s
      timeout: 3s
      retries: 3
      start_period: 30s

  transcribator_consumer:
    container_name: transcribator_consumer
    build:
      context: ../consumer/
      dockerfile: Dockerfile_consumer
    restart: always
    depends_on:
      - transcribator_rabbit
    env_file:
      - ../.env
    volumes:
      - logs_transcribator:/app/logs
      - temp_transcribator:/app/temp
    networks:
      app_net_3:
        ipv4_address: 10.0.2.7

volumes:
  cache_transcribator:
  logs_transcribator:
  temp_transcribator:
  rb_volume_transcribator:

networks:
  app_net_3:
    ipam:
      driver: default
      config:
        - subnet: "10.0.2.0/24"
